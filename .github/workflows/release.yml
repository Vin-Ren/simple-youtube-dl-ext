name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build_server:
    name: Build Server Executable
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04, macos-14] # pinned versions
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pyinstaller

      - name: Download and set up FFmpeg (Windows)
        if: runner.os == 'Windows'
        run: |
          curl -L https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip -o ffmpeg.zip
          7z x ffmpeg.zip -offmpeg
          copy ffmpeg\*\bin\ffmpeg.exe ffmpeg.exe
        shell: pwsh

      - name: Install FFmpeg (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Install FFmpeg (macOS)
        if: runner.os == 'macOS'
        run: brew install ffmpeg

      - name: Build with PyInstaller (Windows)
        if: runner.os == 'Windows'
        run: pyinstaller --onefile --add-binary "ffmpeg.exe;." backend/server.py

      - name: Build with PyInstaller (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: pyinstaller --onefile --add-binary "$(which ffmpeg):." backend/server.py

      - uses: actions/upload-artifact@v4
        with:
          name: server-${{ runner.os }}
          path: dist/server*

  build_extensions:
    name: Build Browser Extensions
    runs-on: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: python build_extension.py
      - uses: actions/upload-artifact@v4
        with:
          name: extensions
          path: build/*.zip

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-22.04
    needs: [build_server, build_extensions]

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/**/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
